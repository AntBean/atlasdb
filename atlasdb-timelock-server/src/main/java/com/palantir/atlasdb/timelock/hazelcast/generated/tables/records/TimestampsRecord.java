/**
 * This class is generated by jOOQ
 */
package com.palantir.atlasdb.timelock.hazelcast.generated.tables.records;


import com.palantir.atlasdb.timelock.hazelcast.generated.tables.Timestamps;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record2;
import org.jooq.Row2;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TimestampsRecord extends UpdatableRecordImpl<TimestampsRecord> implements Record2<Object, Integer> {

    private static final long serialVersionUID = -1503784785;

    /**
     * Setter for <code>timestamps.client</code>.
     */
    public void setClient(Object value) {
        set(0, value);
    }

    /**
     * Getter for <code>timestamps.client</code>.
     */
    public Object getClient() {
        return (Object) get(0);
    }

    /**
     * Setter for <code>timestamps.timestamp</code>.
     */
    public void setTimestamp(Integer value) {
        set(1, value);
    }

    /**
     * Getter for <code>timestamps.timestamp</code>.
     */
    public Integer getTimestamp() {
        return (Integer) get(1);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Object> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record2 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row2<Object, Integer> fieldsRow() {
        return (Row2) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row2<Object, Integer> valuesRow() {
        return (Row2) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Object> field1() {
        return Timestamps.TIMESTAMPS.CLIENT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field2() {
        return Timestamps.TIMESTAMPS.TIMESTAMP;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Object value1() {
        return getClient();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value2() {
        return getTimestamp();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TimestampsRecord value1(Object value) {
        setClient(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TimestampsRecord value2(Integer value) {
        setTimestamp(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TimestampsRecord values(Object value1, Integer value2) {
        value1(value1);
        value2(value2);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached TimestampsRecord
     */
    public TimestampsRecord() {
        super(Timestamps.TIMESTAMPS);
    }

    /**
     * Create a detached, initialised TimestampsRecord
     */
    public TimestampsRecord(Object client, Integer timestamp) {
        super(Timestamps.TIMESTAMPS);

        set(0, client);
        set(1, timestamp);
    }
}
