/**
 * This class is generated by jOOQ
 */
package com.palantir.atlasdb.timelock.hazelcast.generated.tables;


import com.palantir.atlasdb.timelock.hazelcast.generated.DefaultSchema;
import com.palantir.atlasdb.timelock.hazelcast.generated.Keys;
import com.palantir.atlasdb.timelock.hazelcast.generated.tables.records.TimestampsRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Timestamps extends TableImpl<TimestampsRecord> {

    private static final long serialVersionUID = -541178642;

    /**
     * The reference instance of <code>timestamps</code>
     */
    public static final Timestamps TIMESTAMPS = new Timestamps();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<TimestampsRecord> getRecordType() {
        return TimestampsRecord.class;
    }

    /**
     * The column <code>timestamps.client</code>.
     */
    public final TableField<TimestampsRecord, Object> CLIENT = createField("client", org.jooq.impl.DefaultDataType.getDefaultDataType("STRING"), this, "");

    /**
     * The column <code>timestamps.timestamp</code>.
     */
    public final TableField<TimestampsRecord, Integer> TIMESTAMP = createField("timestamp", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * Create a <code>timestamps</code> table reference
     */
    public Timestamps() {
        this("timestamps", null);
    }

    /**
     * Create an aliased <code>timestamps</code> table reference
     */
    public Timestamps(String alias) {
        this(alias, TIMESTAMPS);
    }

    private Timestamps(String alias, Table<TimestampsRecord> aliased) {
        this(alias, aliased, null);
    }

    private Timestamps(String alias, Table<TimestampsRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return DefaultSchema.DEFAULT_SCHEMA;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<TimestampsRecord> getPrimaryKey() {
        return Keys.PK_TIMESTAMPS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<TimestampsRecord>> getKeys() {
        return Arrays.<UniqueKey<TimestampsRecord>>asList(Keys.PK_TIMESTAMPS);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamps as(String alias) {
        return new Timestamps(alias, this);
    }

    /**
     * Rename this table
     */
    public Timestamps rename(String name) {
        return new Timestamps(name, null);
    }
}
